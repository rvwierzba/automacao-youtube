name: Automação YouTube

on:
  schedule:
    - cron: '0 0,12 * * *'  # Executa duas vezes ao dia (à meia-noite e ao meio-dia)
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Instalar Dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Criar Pasta de Credenciais
        run: mkdir -p credentials

      - name: Decodificar Service Account JSON
        run: |
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 --decode | sed '1s/^\xEF\xBB\xBF//' > credentials/service_account.json

      - name: Instalar jq para Validar JSON
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Validar Estrutura do service_account.json
        run: jq empty credentials/service_account.json

      - name: Verificar Presença do Campo 'token_uri' no service_account.json
        run: |
          if jq -e '.token_uri' credentials/service_account.json > /dev/null; then
            echo "'token_uri' está presente."
          else
            echo "Erro: Campo 'token_uri' está ausente no service_account.json."
            exit 1
          fi

      - name: Verificar Presença do Campo 'client_email' no service_account.json
        run: |
          if jq -e '.client_email' credentials/service_account.json > /dev/null; then
            echo "'client_email' está presente."
          else
            echo "Erro: Campo 'client_email' está ausente no service_account.json."
            exit 1
          fi

      - name: Executar Script de Automação
        run: |
          source venv/bin/activate
          # Verifica se todas as variáveis de ambiente estão definidas
          if [ -z "$GEMINI_API_KEY" ] || [ -z "$YOUTUBE_CHANNEL_ID" ] || [ -z "$PIXABAY_API_KEY" ]; then
            echo "Erro: Uma ou mais variáveis de ambiente estão vazias."
            exit 1
          fi
          # Executa o script principal com os parâmetros necessários
          python scripts/main.py \
            --gemini-api "${GEMINI_API_KEY}" \
            --youtube-channel "${YOUTUBE_CHANNEL_ID}" \
            --pixabay-api "${PIXABAY_API_KEY}" \
            --quantidade 2  # Definindo uma quantidade fixa de 2 vídeos por execução

        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
          # QUANTIDADE não está sendo passado como variável de ambiente
          # Já que será definido diretamente no comando acima

      # Etapas de pós-processamento, se houver
      - name: Finalizar Job
        run: echo "Job concluído."
