name: build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Instalar Dependências
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configurar Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Criar Pasta de Credenciais
        run: mkdir -p credentials

      - name: Decodificar Service Account JSON
        run: echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" | base64 --decode | sed '1s/^\xEF\xBB\xBF//' > credentials/service_account.json

      - name: Instalar jq para Validar JSON
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Validar Estrutura do service_account.json
        run: jq empty credentials/service_account.json

      - name: Verificar Presença do Campo 'token_uri' no service_account.json
        run: |
          if jq -e '.token_uri' credentials/service_account.json > /dev/null; then
            echo "'token_uri' está presente."
          else
            echo "Erro: Campo 'token_uri' está ausente no service_account.json."
            exit 1
          fi

      - name: Verificar Presença do Campo 'client_email' no service_account.json
        run: |
          if jq -e '.client_email' credentials/service_account.json > /dev/null; then
            echo "'client_email' está presente."
          else
            echo "Erro: Campo 'client_email' está ausente no service_account.json."
            exit 1
          fi

      - name: Executar Script de Automação
        run: |
          source venv/bin/activate
          python scripts/main.py  # Substituído para o script correto

      # Passos de pós-processamento, se houver
      - name: Post Checkout do Repositório
        if: always()
        run: echo "Finalizando o checkout do repositório."

      - name: Post Configurar Python
        if: always()
        run: echo "Finalizando a configuração do Python."

