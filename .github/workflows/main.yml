name: Publicar Vídeos no YouTube

on:
  schedule:
    # Executa todo dia às 05:00 UTC
    - cron: '0 5 * * *'
    # Executa todo dia às 19:00 UTC
    - cron: '0 19 * * *'
  workflow_dispatch:

jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
      # “CLIENT_SECRET_FILE_FIZZQUIRK” e “TOKEN_FILE_FIZZQUIRK” contêm conteúdo JSON
      CLIENT_SECRET_FILE: ${{ secrets.CLIENT_SECRET_FILE_FIZZQUIRK }}
      TOKEN_FILE: ${{ secrets.TOKEN_FILE_FIZZQUIRK }}

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install & Run
        run: |
          # (Opcional) Desabilita ImageMagick no MoviePy
          echo "IMAGEMAGICK_BINARY=/bin/false" >> $GITHUB_ENV

          # Cria e ativa venv
          python -m venv venv
          source venv/bin/activate

          # Atualiza pip e instala dependências
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

          # Apenas debug das libs
          echo ">>> pip freeze debug:"
          pip freeze

          # 1) Gera Texto + Audio + Legendas + Vídeo
          python scripts/main.py \
            --gemini-api "$GEMINI_API_KEY" \
            --youtube-channel "$YOUTUBE_CHANNEL_ID"

          # 2) Faz Upload no YouTube
          python scripts/upload_youtube.py \
            --api-key "$YOUTUBE_API_KEY" \
            --channel "$YOUTUBE_CHANNEL_ID" \
            --client-secret-file "$CLIENT_SECRET_FILE" \
            --token-file "$TOKEN_FILE" \
            --video-file "video_final.mp4"
