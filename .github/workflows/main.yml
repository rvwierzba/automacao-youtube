name: Automação YouTube

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      QUANTIDADE: 10  # Variável de ambiente fixa

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create Client Secret File
        run: echo "${{ secrets.CLIENT_SECRET_FILE_FIZZQUIRK }}" | base64 --decode > client_secret.json

      - name: Create Token File
        run: echo "${{ secrets.TOKEN_FILE_FIZZQUIRK }}" | base64 --decode > token.json

      - name: Mostrar Diretório Atual Antes da Geração do Vídeo
        run: pwd

      - name: Listar Arquivos Antes da Geração do Vídeo
        run: ls -la

      - name: Depuração das Variáveis de Ambiente
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
        run: |
          echo "GEMINI_API_KEY: $GEMINI_API_KEY"
          echo "YOUTUBE_CHANNEL_ID: $YOUTUBE_CHANNEL_ID"
          echo "PIXABAY_API_KEY: $PIXABAY_API_KEY"

      - name: Generate Video
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
          PIXABAY_API_KEY: ${{ secrets.PIXABAY_API_KEY }}
          QUANTIDADE: ${{ env.QUANTIDADE }}
        run: |
          source venv/bin/activate
          echo "Iniciando a geração do vídeo com as seguintes variáveis:"
          echo "GEMINI_API_KEY: $GEMINI_API_KEY"
          echo "YOUTUBE_CHANNEL_ID: $YOUTUBE_CHANNEL_ID"
          echo "PIXABAY_API_KEY: $PIXABAY_API_KEY"
          echo "QUANTIDADE: $QUANTIDADE"
          python scripts/main.py \
            --gemini-api "$GEMINI_API_KEY" \
            --youtube-channel "$YOUTUBE_CHANNEL_ID" \
            --pixabay-api "$PIXABAY_API_KEY" \
            --quantidade "$QUANTIDADE" | tee main_output.log

          # Verificação imediata
          if [ -f "video_final.mp4" ]; then
            echo "Vídeo gerado com sucesso: video_final.mp4"
          else
            echo "Erro: O vídeo não foi gerado."
            exit 1
          fi

      - name: Listar Arquivos Após a Geração do Vídeo
        run: ls -la

      - name: Verify Video Generation
        run: |
          echo "Verificando a geração do vídeo..."
          if [ ! -f "video_final.mp4" ]; then
            echo "Erro: O arquivo de vídeo 'video_final.mp4' não foi encontrado."
            echo "Listando arquivos para depuração:"
            ls -la
            exit 1
          else
            echo "Arquivo 'video_final.mp4' encontrado com sucesso."
          fi

      - name: Verificar Espaço em Disco
        run: df -h

      - name: Exibir Logs da Geração do Vídeo
        if: failure()
        run: cat main_output.log

      - name: Complete job
        run: echo "Workflow concluído."
