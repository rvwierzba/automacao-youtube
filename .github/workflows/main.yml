name: Publicar Vídeos no YouTube

on:
  schedule:
    - cron: '0 5 * * *'
    - cron: '0 19 * * *'
  workflow_dispatch:
  # Se quiser rodar também a cada push, habilite:
  # push:
  #   branches: [ "main" ]

jobs:
  build_and_upload:
    runs-on: ubuntu-latest

    # Variáveis de ambiente puxando SECRETS do repositório
    # (Exemplo: GEMINI_API_KEY, YOUTUBE_API_KEY etc.)
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
      YOUTUBE_CHANNEL_ID: ${{ secrets.YOUTUBE_CHANNEL_ID }}
      CLIENT_SECRET_FILE: ${{ secrets.CLIENT_SECRET_FILE_FIZZQUIRK }}
      TOKEN_FILE: ${{ secrets.TOKEN_FILE_FIZZQUIRK }}
      # Obs: Você tem CLIENT_SECRET_FILE_FIZZQUIRK e TOKEN_FILE_FIZZQUIRK
      # guardados, possivelmente contendo JSON. Ajuste conforme sua real lógica.

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install & Run
        run: |
          # (Opcional) Desabilitar ImageMagick
          echo "IMAGEMAGICK_BINARY=/bin/false" >> $GITHUB_ENV

          # Cria e ativa venv
          python -m venv venv
          source venv/bin/activate

          # Atualiza pip e instala dependências
          pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

          # Debug: libs instaladas
          echo ">>> pip freeze debug:"
          pip freeze

          # 1) Gera Roteiro + Cria Vídeo
          python scripts/main.py \
            --gemini-api "$GEMINI_API_KEY" \
            --youtube-channel "$YOUTUBE_CHANNEL_ID"

          # 2) Sobe vídeo pro YouTube
          python scripts/upload_youtube.py \
            --api-key "$YOUTUBE_API_KEY" \
            --channel "$YOUTUBE_CHANNEL_ID" \
            --client-secret-file "$CLIENT_SECRET_FILE" \
            --token-file "$TOKEN_FILE"
